{"version":3,"sources":["sites/maps/createRoute.js","mockData.js","sites/Create.js","sites/Search.js","sites/LogIn.js","sites/FAQ.js","sites/Home.js","sites/user/MyRoutes.js","sites/user/MyReviews.js","sites/user/Settings.js","Website.js","index.js"],"names":["map","yellowWaypoint","aPoints","aMarker","Array","aPoly","aHighlight","onMapClick","e","push","latlng","length","L","marker","icon","addTo","polyline","color","onMapLoad","_callee","regenerator_default","a","wrap","_context","prev","next","getLocalPointsOfInterest","stop","this","oBorder","dMaxLong","getBounds","getEast","dMinLong","getWest","dMaxLat","getNorth","dMinLat","getSouth","mockFeatures","key","value","text","mockData","id","title","description","address","distance","difficulty","rating","image","isFavorised","features","comments","author","avatar","datetime","stars","Create","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","_ref","index","setState","showMoreFeatures","state","handleChange","_ref2","onSubmitRoute","routeCreated","componentDidMount","center","minZoom","zoom","iconUrl","iconSize","iconAnchor","layerGroup","popup","on","tileLayer","attribution","subdomains","setView","locate","watch","console","log","alert","activeIndex","lat","lng","react_default","createElement","Sidebar","Pushable","data-testid","as","Segment","animation","direction","visible","width","Message","success","header","Form","size","onSubmit","Header","Subheader","Input","fluid","label","placeholder","required","TextArea","type","iconPosition","Icon","name","link","inverted","Group","inline","Radio","checked","onChange","Dropdown","multiple","search","selection","options","Button","Pusher","style","height","Component","Search","defineProperty","handleValueChange","onSearchChanged","d","searchText","onSearch","searched","onShowDetail","showDetail","onSubmitReview","toggleReviewDialog","reviewIsOpen","toggleFavorite","routeLength","_this2","position","searchResults","forEach","result","Item","onClick","Image","rounded","src","Content","Meta","Description","Extra","Rating","defaultRating","maxRating","disabled","detailRoute","find","route","action","dividing","content","Field","Label","build","settings","start","min","max","step","fontSize","Divider","Grid","columns","Column","textAlign","Menu","active","divided","verticalAlign","float","Popup","trigger","className","basic","centered","horizontal","Statistic","Value","feature","Comment","minimal","floated","compact","Modal","open","closeOnEscape","closeOnDimmerClick","scrolling","Avatar","Author","Text","autoHeight","Actions","primary","Container","comment","Metadata","Map","TileLayer","url","Marker","LogIn","onChangeInput","target","onSubmitForm","referrTo","sessionStorage","setItem","location","from","updateLoginStatus","pathname","history","hasError","maxWidth","attached","error","warning","href","FAQ","titleProps","newIndex","padded","Accordion","block","styled","Title","Home","lib","autoPlay","showArrows","infiniteLoop","useKeyboardArrows","showThumbs","MyRoutes","MyReviews","Settings","Website","loggedIn","getItem","PrivateRoute","component","rest","objectWithoutProperties","Route","assign","render","Redirect","to","HashRouter","fixed","marginBottom","NavLink","exact","paddingLeft","item","labeled","padding","clear","vertical","path","sites_LogIn","ReactDOM","src_Website","document","getElementById"],"mappings":"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","file":"static/js/main.2814f7c0.chunk.js","sourcesContent":["// See post: http://asmaloney.com/2014/01/code/creating-an-interactive-map-with-leaflet-and-openstreetmap/\r\nimport L from 'leaflet';\r\n\r\nvar dLat;\r\nvar dLng;\r\nvar aPoints = [];\r\nvar aMarker = new Array();\r\nvar aPoly = new Array();\r\nvar aHighlight = new Array(); // Boolean\r\nvar map;\r\nvar yellowWaypoint;\r\nvar cities;\r\nvar popup;\r\n\r\nexport function onInit() {\r\n    map = L.map( 'map', {\r\n        center: [20.0, 5.0],\r\n        minZoom: 2,\r\n        zoom: 2\r\n    });\r\n    yellowWaypoint = L.icon({\r\n        iconUrl: './static/media/pin48Waypoint.png',\r\n        iconSize:     [29, 24],\r\n        iconAnchor:   [15, 23]\r\n    });\r\n    cities = L.layerGroup();\r\n    popup = L.popup();\r\n\r\n    map.on('load', onMapLoad);\r\n    map.on('click', onMapClick);\r\n    map.on('moveend', onMapLoad);\r\n\r\n    L.tileLayer( 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\r\n        subdomains: ['a', 'b', 'c']\r\n    }).addTo( map );\r\n\r\n    map.setView([49.47748, 8.42216], 15);\r\n\r\n    map.locate({setView: true, watch: true}) /* This will return map so you can do chaining */\r\n        .on('locationfound', function(e){})\r\n        .on('locationerror', function(e){\r\n            console.log(e);\r\n            alert(\"Location access denied.\");\r\n        });\r\n\r\n    map.on('click', onMapClick);\r\n}\r\n\r\n\r\n//var myURL = jQuery( 'script[src$=\"createRoute.js\"]' ).attr( 'src' ).replace( 'createRoute.js', '' );\r\n\r\n//var fs = require(' fs'); //Importing filesystem package\r\n//var data = fs.readFileSync('highlights.json');\r\n//var highlights = JSON.parse(data);\r\n\r\nfunction onMapClick(e) {\r\n  //Save Click Coordinates in variable;\r\n  aHighlight.push(0);\r\n  aPoints.push(e.latlng);\r\n  aMarker[aMarker.length] = L.marker(aPoints[aPoints.length - 1],{icon: yellowWaypoint}).addTo(map);\r\n  aPoly[aPoly.length] = L.polyline(aPoints, {color: 'red'}).addTo(map);\r\n}\r\n\r\nfunction connectPoint(koordinaten){\r\n  aHighlight.push(1);\r\n  aPoints.push(koordinaten);\r\n  aMarker[aMarker.length] = null;\r\n  aPoly[aPoly.length] = L.polyline(aPoints, {color: 'red'}).addTo(map);\r\n}\r\n\r\n\r\nfunction deleteFunction(){\r\n if(aHighlight[aHighlight.length-1]==0){\r\n  map.removeLayer(aMarker[aMarker.length -1 ]);\r\n }\r\n  map.removeLayer(aPoly[aPoly.length - 1]);\r\n  aMarker.splice(aMarker.length - 1,1);\r\n  aPoints.splice(aPoints.length - 1,1);\r\n  aPoly.splice(aPoly.length -1,1);\r\n  aHighlight.splice(aHighlight.length -1);\r\n\r\n}\r\nfunction submitFunction(){\r\n  var sName = document.getElementById(\"name\").value;\r\n  var sDescription = document.getElementById(\"beschreibung\").value;\r\n\r\n\r\n\r\n  var objHighlight = {\"Name\": sName, \"Beschreibung\": sDescription, \"Latitude\": dLat, \"Longitude\": dLng};\r\n  localStorage.setItem('myStorage', JSON.stringify(objHighlight));\r\n  objHighlight = JSON.parse(localStorage.getItem('myStorage'));\r\n\r\n  //data.writeFile('highlights.json', newHighlight, finished);\r\n\r\n}\r\nasync function onMapLoad(e) {\r\n  await getLocalPointsOfInterest();\r\n}\r\n\r\nfunction getLocalPointsOfInterest() {\r\n  //only get points that are in the bounds of the map\r\n  var oBorder = {};\r\n  oBorder.dMaxLong = map.getBounds().getEast();\r\n  oBorder.dMinLong = map.getBounds().getWest();\r\n  oBorder.dMaxLat = map.getBounds().getNorth();\r\n  oBorder. dMinLat = map.getBounds().getSouth();\r\n  /*$.ajax({\r\n     type: 'GET',\r\n      url: 'http://localhost:3001/getLocalPoints',\r\n      dataType: \"json\",\r\n      data: {border: oBorder},\r\n      success: function(data) {\r\n          console.log(\"success\");\r\n          displayPoints(data);\r\n      },\r\n      error: function(err) {\r\n         console.log(err);\r\n      }\r\n  });*/\r\n}\r\nfunction displayPoints(arrayPoints) {\r\n  for (let i in arrayPoints) {\r\n      let mark = L.marker([\r\n          parseFloat(arrayPoints[i].latitude),\r\n          parseFloat(arrayPoints[i].longitude)], {title: arrayPoints[i].name}\r\n        );\r\n      mark.bindPopup(\"Test\");//Hier würden wir gerne den Namen darstellen\r\n      cities.addLayer(mark);\r\n      console.log(arrayPoints[i]);\r\n  }\r\n  cities.addTo(map);\r\n\r\n  cities.eachLayer(function(layer) {\r\n    layer.on('click', function(){\r\n      connectPoint(this.getLatLng());\r\n  });\r\n});\r\n\r\ncities.eachLayer(function(layer) {\r\n  layer.on('mouseover', function(){\r\n    layer.openPopup();\r\n});\r\n});\r\n}\r\n\r\n\r\n//@Nikola please check\r\nfunction newEntry(){\r\n  let oRoute = {};\r\n    oRoute.name = document.getElementById(\"sName\").value;\r\n    oRoute.description = document.getElementById(\"sDescription\").value;\r\n    oRoute.points = aPoints; // min aPoints & aHighlight muss gespeichert werden, die anderen beiden würden es vereinfachen.\r\n    oRoute.marker = aMarker;\r\n    oRoute.poly = aPoly;\r\n    oRoute.highlight = aHighlight;\r\n    var jsonRoute = JSON.stringify(oRoute);\r\n    //console.log(jsonPoint);\r\n    /*$.ajax({\r\n        type: 'POST',\r\n        data: { route: jsonRoute },\r\n        datatype: 'json',\r\n        url: 'http://localhost:3001/saveRoute',\r\n        success: function(data) {\r\n            console.log('saved document');\r\n        }\r\n    });*/\r\n}\r\n\r\n","export const mockFeatures = [\r\n    { key: 1, value: 'Kid-Friendly', text: 'Kid-Friendly' },\r\n    { key: 2, value: 'Wineyard', text: 'Wineyard' },\r\n    { key: 3, value: 'River', text: 'River' },\r\n    { key: 4, value: 'Forest', text: 'Forest' },\r\n    { key: 5, value: 'Dogs Allowed', text: 'Dogs Allowed' },\r\n    { key: 6, value: 'Lake', text: 'Lake' }\r\n];\r\nexport const mockData = [\r\n    {\r\n        id: 1,\r\n        title: 'Wanderweg 1',\r\n        description: 'Ganz viel text...',\r\n        address: 'Speyer, RLP, Deutschland',\r\n        distance: 4,\r\n        difficulty: 'moderate',\r\n        rating: 4,\r\n        image: './static/media/RiceTerraces.JPG',\r\n        isFavorised: true,\r\n        features: ['Kid-Friendly', 'Wineyard', 'River'],\r\n        comments: [\r\n            {author: 'Fred', avatar: 1, datetime: '13.11.2018 11:10', text: 'Voll klasse der Wanderweg!', stars: 4},\r\n            {author: 'Lisa', avatar: 1, datetime: '12.11.2018 22:03', text: 'Ja war wirklich cool.', stars: 3},\r\n            {author: 'Peter', avatar: 1, datetime: '11.11.2018 11:01', text: 'Bester Wanderung ever. Vor allem gabs überall Schorle. Hammer.', stars: 5}\r\n        ]\r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'Wanderweg 2',\r\n        description: 'Ganz viel text...',\r\n        address: 'Speyer, RLP, Deutschland',\r\n        distance: 8,\r\n        difficulty: 'easy',\r\n        rating: 2,\r\n        image: './static/media/RiceTerraces.JPG',\r\n        isFavorised: false,\r\n        features: ['Dogs Allowed', 'Wineyard', 'Forest', 'River'],\r\n        comments: []\r\n    },\r\n    {\r\n        id: 3,\r\n        title: 'Wanderweg 2',\r\n        description: 'Ganz viel text...',\r\n        address: 'Speyer, RLP, Deutschland',\r\n        distance: 8,\r\n        difficulty: 'easy',\r\n        rating: 2,\r\n        image: './static/media/RiceTerraces.JPG',\r\n        isFavorised: false,\r\n        features: ['Dogs Allowed', 'Wineyard', 'Forest', 'River'],\r\n        comments: []\r\n    }];\r\n","import React, {Component} from 'react';\r\nimport {\r\n    Container, Header, Button, Divider, Grid, Image, Sidebar, Visibility, Message,\r\n    Responsive, Segment, Menu, Icon, Input, Checkbox, Accordion, Form, Radio, Dropdown\r\n} from 'semantic-ui-react'\r\nimport {Map, TileLayer, Marker, Popup} from 'react-leaflet';\r\nimport * as createRoute from './maps/createRoute';\r\nimport {mockFeatures} from \"../mockData\";\r\n\r\nclass Create extends Component {\r\n\r\n    /**\r\n     * Represents the Create component for creating routes.\r\n     * @constructor\r\n     * @param {Object} props - Properties passed to this component.\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeIndex: -1,\r\n            showMoreFeatures: false,\r\n            routeCreated: false,\r\n\r\n            lat: 51.505,\r\n            lng: -0.09,\r\n            zoom: 13,\r\n        }\r\n    }\r\n\r\n    // Accordion Logik\r\n    handleClick = (e, {index}) => {\r\n        this.setState({showMoreFeatures: !this.state.showMoreFeatures});\r\n    };\r\n\r\n    /**\r\n     * Handles the radio button change.\r\n     * @param {Object} e - Event parameter that is passed with the change\r\n     * @param {String} value - Value of the changed control\r\n     */\r\n    handleChange = (e, {value}) => {\r\n        this.setState({value});\r\n    };\r\n\r\n    onSubmitRoute = (e) => {\r\n        // todo: get current leaflet route information\r\n\r\n        // todo: submit routine\r\n        this.setState({routeCreated: true});\r\n    };\r\n\r\n    /**\r\n     * Injects the leaflet map functionality after the React component has rendered.\r\n     */\r\n    componentDidMount = () => {\r\n        createRoute.onInit();\r\n    };\r\n\r\n    /**\r\n     * Function that is being called when the component is rendered.\r\n     */\r\n    render() {\r\n        const {value} = this.state;\r\n        const position = [this.state.lat, this.state.lng];\r\n\r\n        // Seitenaufbau\r\n        return (\r\n            <Sidebar.Pushable data-testid='siteCreate'>\r\n                {/* Sidebar = Right Column */}\r\n                <Sidebar as={Segment} animation='push' direction='right' visible width='very wide'>\r\n                    {this.state.routeCreated &&\r\n                    <Message success header='The route has successfully been created!'/>}\r\n                    <Form size='large' onSubmit={this.onSubmitRoute}>\r\n                        <Header as='h2'>\r\n                            Create new route\r\n                            <Header.Subheader>Enter route information</Header.Subheader>\r\n                        </Header>\r\n\r\n                        <Form.Input fluid label='Title' placeholder='Title of the route' required/>\r\n                        <Form.TextArea fluid label='Description' placeholder='Description of the route'/>\r\n\r\n                        <Form.Input type='file' fluid label='Image' placeholder='Upload image file'\r\n                                    iconPosition='left'\r\n                                    icon={<Icon name='add' link inverted color='black'/>}/>\r\n\r\n                        <Form.Group inline>\r\n                            <label>Difficulty</label>\r\n\r\n                            <Form.Radio\r\n                                label='easy'\r\n                                value='easy'\r\n                                checked={this.state.value === 'easy'}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <Form.Radio\r\n                                label='moderate'\r\n                                value='moderate'\r\n                                checked={this.state.value === 'moderate'}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <Form.Radio\r\n                                label='difficult'\r\n                                value='difficult'\r\n                                checked={this.state.value === 'difficult'}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </Form.Group>\r\n                        {/*<Form.Group widths='equal'>\r\n                            <Form.Checkbox label='Kid-Friendly'/>\r\n                            <Form.Checkbox label='Dogs Allowed'/>\r\n                        </Form.Group>\r\n                        <Form.Group widths='equal'>\r\n                            <Form.Checkbox label='Forest'/>\r\n                            <Form.Checkbox label='Lake'/>\r\n                        </Form.Group>\r\n                        <Form.Group widths='equal'>\r\n                            <Form.Checkbox label='River'/>\r\n                            <Form.Checkbox label='Wineyard'/>\r\n                        </Form.Group>*/}\r\n                        <Form.Dropdown name='features' label='Features' placeholder='Route features'\r\n                                       fluid multiple search selection options={mockFeatures}/>\r\n\r\n                        <Form.Button type='submit' color='blue'>Save</Form.Button>\r\n                    </Form>\r\n\r\n                </Sidebar>\r\n\r\n                {/* Sidebar.Pusher = Left Column */}\r\n                <Sidebar.Pusher style={{height: '100%'}}>\r\n                    {/* <Map center={position} zoom={this.state.zoom} style={{height: \"100%\"}}>\r\n                        <TileLayer\r\n                            attribution=\"&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        />\r\n                        <Marker position={position}>\r\n                            <Popup>\r\n                                A pretty CSS3 popup. <br/> Easily customizable\r\n                            </Popup>\r\n                        </Marker>\r\n                    </Map>\r\n                    */}\r\n                    <div id='map' style={{height: \"100%\"}}/>\r\n                </Sidebar.Pusher>\r\n            </Sidebar.Pushable>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Create;","import React, {Component} from 'react';\r\n\r\nimport {\r\n    Container,\r\n    Header,\r\n    Comment,\r\n    Button,\r\n    Divider,\r\n    Grid,\r\n    Image,\r\n    Sidebar,\r\n    Segment,\r\n    Menu,\r\n    Icon,\r\n    Label,\r\n    Transition,\r\n    Input,\r\n    Rating,\r\n    Checkbox,\r\n    Accordion,\r\n    Form,\r\n    Radio,\r\n    Dropdown,\r\n    Item,\r\n    Statistic,\r\n    Sticky,\r\n    Modal,\r\n    Popup\r\n} from 'semantic-ui-react'\r\nimport {Map, TileLayer, Marker} from 'react-leaflet';\r\nimport {Slider} from 'react-semantic-ui-range';\r\nimport {mockData, mockFeatures} from '../mockData';\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            lat: 51.505,\r\n            lng: -0.09,\r\n            zoom: 13,\r\n\r\n            difficulty: 0,\r\n            routeLength: 5,\r\n            searchText: '',\r\n            searched: false,\r\n            showDetail: -1,\r\n            reviewIsOpen: false,\r\n            isFavorised: false\r\n        }\r\n    }\r\n\r\n    // RadioButton Logik\r\n    handleChange = (e, {name, value}) => {\r\n        this.setState({[name]: value});\r\n    };\r\n\r\n    //Range\r\n    handleValueChange = (e, {value}) => {\r\n        this.setState({value: value});\r\n    };\r\n\r\n    //onSearchChanged\r\n    onSearchChanged = (e, d) => {\r\n        this.setState({searchText: d.value});\r\n    };\r\n\r\n    //onSearch\r\n    onSearch = (e, d) => {\r\n        // todo: Suchanfrage ans Backend\r\n        this.setState({searched: true});\r\n\r\n    };\r\n\r\n    /**\r\n     * Navigates to the detail view of a route (or back)\r\n     * @param {int} id - the id of the route to be displayed (or -1 if back)\r\n     */\r\n    onShowDetail = (id) => {\r\n        let isFavorised = id >= 0 ? mockData[id].isFavorised : false;\r\n\r\n        // navigate internally\r\n        this.setState({\r\n            showDetail: id,\r\n            isFavorised: isFavorised\r\n        });\r\n    };\r\n\r\n    onSubmitReview = () => {\r\n        // todo: routine for send new review\r\n    };\r\n\r\n    toggleReviewDialog = () => {\r\n        this.setState({reviewIsOpen: !this.state.reviewIsOpen});\r\n    };\r\n    toggleFavorite = () => {\r\n        // todo: send request to toggle favorite\r\n\r\n        // toggle on UI\r\n        let isFavorised = !this.state.isFavorised;\r\n        this.setState({isFavorised: isFavorised});\r\n    };\r\n\r\n    render() {\r\n        const position = [this.state.lat, this.state.lng];\r\n\r\n        var searchResults = [];\r\n        if (this.state.searched) {\r\n            mockData.forEach((result) => {\r\n                searchResults.push(\r\n                    <Item onClick={() => this.onShowDetail(result.id)}>\r\n                        <Item.Image size='small' rounded src={result.image}/>\r\n                        <Item.Content>\r\n                            <Item.Header as='h4'> {result.title} </Item.Header>\r\n                            <Item.Meta>{result.address}</Item.Meta>\r\n                            <Item.Description>\r\n                                <p/>\r\n                                Distance: {result.distance} km\r\n                                <p/>\r\n                                Difficulty: {result.difficulty}\r\n                                <Item.Extra>\r\n                                    <Rating icon='star' defaultRating={result.rating} maxRating={5} disabled/>\r\n                                </Item.Extra>\r\n                            </Item.Description>\r\n                        </Item.Content>\r\n                    </Item>\r\n                )\r\n            });\r\n        }\r\n        var detailRoute = mockData.find((route) => route.id === this.state.showDetail);\r\n\r\n        return (\r\n            <Sidebar.Pushable data-testid='siteSearch'>\r\n                {/* Sidebar = Right Column */}\r\n                <Sidebar as={Segment} animation='push' direction='right' visible width='very wide'>\r\n                    {this.state.showDetail <= -1 ?\r\n                        /* display search form*/\r\n                        <div>\r\n                            <Form size='large'>\r\n                                <Header as='h2'>Find a trail / Search for a route</Header>\r\n                                <Form.Input fluid placeholder='Enter area, city or landmark'\r\n                                            onChange={this.onSearchChanged}\r\n                                            action={{icon: 'search', onClick: this.onSearch}}/>\r\n                                <Header as='h4' dividing icon='filter' content='Filter'/>\r\n                                <Form.Group inline>\r\n                                    <label>Difficulty</label>\r\n                                    <Form.Radio label='easy' value='easy' name='difficulty'\r\n                                                checked={this.state.difficulty === 'easy'}\r\n                                                onChange={this.handleChange}/>\r\n                                    <Form.Radio label='moderate' value='moderate' name='difficulty'\r\n                                                checked={this.state.difficulty === 'moderate'}\r\n                                                onChange={this.handleChange}/>\r\n                                    <Form.Radio label='difficult' value='difficult' name='difficulty'\r\n                                                checked={this.state.difficulty === 'difficult'}\r\n                                                onChange={this.handleChange}/>\r\n                                </Form.Group>\r\n                                <Form.Field>\r\n                                    <label>\r\n                                        Route length in km: Routes up to <Label\r\n                                        color='blue'>{this.state.routeLength}</Label> km\r\n                                    </label>\r\n                                    <Slider name='routeLength' color='blue' inverted={false}\r\n                                            settings={{\r\n                                                start: this.state.routeLength,\r\n                                                min: 0, max: 25, step: 1,\r\n                                                onChange: (value) => this.setState({routeLength: value})\r\n                                            }}/>\r\n                                </Form.Field>\r\n\r\n                                <Form.Dropdown name='features' label='Features' placeholder='Route features'\r\n                                               multiple search selection options={mockFeatures}\r\n                                               style={{fontSize: '0.85em'}}/>\r\n                            </Form>\r\n\r\n                            {this.state.searched && <div>\r\n                                {/* */}\r\n\r\n                                <Divider/>\r\n                                <Grid columns='equal'>\r\n                                    <Grid.Column textAlign='left'>\r\n                                        <Icon name='list'/> {mockData.length} results\r\n                                    </Grid.Column>\r\n                                    <Grid.Column textAlign='right'>\r\n                                        <Dropdown icon='sort' text='Sort By' direction='left'>\r\n                                            <Dropdown.Menu>\r\n                                                <Dropdown.Header icon='sort' content='Sort by'/>\r\n                                                <Dropdown.Divider/>\r\n                                                <Dropdown.Item active text='Relevance'/>\r\n                                                <Dropdown.Item text='Most popular'/>\r\n                                                <Dropdown.Item text='Most recently updated'/>\r\n                                            </Dropdown.Menu>\r\n                                        </Dropdown>\r\n                                    </Grid.Column>\r\n                                </Grid>\r\n\r\n                                <Item.Group divided link>\r\n                                    {searchResults}\r\n                                </Item.Group>\r\n                            </div>}\r\n                        </div>\r\n                        : /*else display detail form*/\r\n                        <Form size='large'>\r\n\r\n                            <Header as='h2' style={{width: \"100%\"}}>\r\n                                <Icon link name='arrow left' style={{verticalAlign: 'top', fontSize: '1em'}}\r\n                                      onClick={() => this.onShowDetail(-1)}/>\r\n                                <Header.Content style={{width: \"100%\"}}>\r\n                                    {detailRoute.title}\r\n                                    <span style={{float: 'right'}}>\r\n                                        <Popup\r\n                                            trigger={<Icon name={this.state.isFavorised ? 'heart' : 'heart outline'}\r\n                                                           link color='red' onClick={this.toggleFavorite}/>}\r\n                                            content={this.state.isFavorised\r\n                                                ? 'Remove this route from your favorites.'\r\n                                                : 'Add this route to your favorites.'}\r\n                                            size='tiny' position='bottom right'/>\r\n                                    </span>\r\n                                    <Header.Subheader as='h4'>{detailRoute.address}</Header.Subheader>\r\n                                </Header.Content>\r\n                            </Header>\r\n\r\n                            <Segment.Group className='basic'>\r\n                                <Segment basic>\r\n                                    <Image centered fluid rounded src={detailRoute.image}/>\r\n                                </Segment>\r\n\r\n                                <Segment.Group className='basic' horizontal textAlign='center'>\r\n                                    <Segment basic>\r\n                                        <Statistic horizontal size='mini' label='km'>\r\n                                            <Statistic.Value>\r\n                                                <Icon name='map'/> {detailRoute.distance} km\r\n                                            </Statistic.Value>\r\n                                        </Statistic>\r\n                                    </Segment>\r\n                                    <Segment basic>\r\n                                        <Statistic horizontal size='mini' label={detailRoute.difficulty}/>\r\n                                    </Segment>\r\n                                    <Segment basic>\r\n                                        <Rating basic icon='star' defaultRating={detailRoute.rating} maxRating={5}\r\n                                                disabled size='huge'/>\r\n                                    </Segment>\r\n                                </Segment.Group>\r\n\r\n                                <Segment basic textAlign='center'>\r\n                                    {detailRoute.features.map((feature) => <Label>{feature}</Label>)}\r\n                                </Segment>\r\n                                <Segment basic>\r\n                                    {detailRoute.description}\r\n                                </Segment>\r\n\r\n                                <Comment.Group minimal>\r\n\r\n                                    <Header as='h2' dividing>\r\n                                        <Button color='blue' icon='heart' content='Add Review'\r\n                                                onClick={this.toggleReviewDialog} floated=\"right\" compact/>\r\n                                        <Header.Content>Reviews</Header.Content>\r\n                                        <Modal open={this.state.reviewIsOpen} closeOnEscape={false}\r\n                                               closeOnDimmerClick={false} size='small' centered>\r\n                                            <Modal.Header>New Review for {detailRoute.title}</Modal.Header>\r\n                                            <Modal.Content scrolling>\r\n                                                <Form>\r\n                                                    <Comment.Group>\r\n                                                        <Comment>\r\n                                                            <Comment.Avatar src='./static/media/avatar-1.png'/>\r\n                                                            <Comment.Content>\r\n                                                                <Comment.Author as='a'>Max Mustermann</Comment.Author>\r\n                                                                <Comment.Text>\r\n\r\n                                                                    <Form.Field><Rating icon='star' size='huge'\r\n                                                                                        maxRating={5}/></Form.Field>\r\n                                                                    <Form.TextArea autoHeight\r\n                                                                                   name='commentText'\r\n                                                                                   placeholder='Enter your review'/>\r\n                                                                    <Form.Input type='file' fluid label='Image'\r\n                                                                                placeholder='Upload image file'\r\n                                                                                iconPosition='left'\r\n                                                                                icon={<Icon name='add' link inverted\r\n                                                                                            color='black'/>}/>\r\n                                                                </Comment.Text>\r\n                                                            </Comment.Content>\r\n                                                        </Comment>\r\n                                                    </Comment.Group>\r\n                                                </Form>\r\n                                            </Modal.Content>\r\n                                            <Modal.Actions>\r\n                                                <Button onClick={this.toggleReviewDialog}>Cancel</Button>\r\n                                                <Button primary onClick={this.onSubmitReview}>Submit</Button>\r\n                                            </Modal.Actions>\r\n                                        </Modal>\r\n                                    </Header>\r\n                                    {detailRoute.comments.length === 0 &&\r\n                                    <Container textAlign='center'>\r\n                                        <i>No comments available. Be the first one to comment!</i>\r\n                                    </Container>}\r\n                                    {detailRoute.comments.map((comment) =>\r\n                                        <Comment>\r\n                                            <Comment.Avatar src='./static/media/avatar-1.png'/>\r\n                                            <Comment.Content>\r\n                                                <Comment.Author as='b'>{comment.author}</Comment.Author>\r\n                                                <Comment.Metadata>\r\n                                                    <span>{comment.datetime}</span>\r\n                                                </Comment.Metadata>\r\n                                                <Comment.Text><p>{comment.text}</p></Comment.Text>\r\n                                                <Comment.Actions>\r\n                                                    <Rating as='a' icon='star'\r\n                                                            defaultRating={comment.stars}\r\n                                                            maxRating={5} disabled/>\r\n                                                </Comment.Actions>\r\n                                            </Comment.Content>\r\n                                        </Comment>)}\r\n                                </Comment.Group>\r\n                            </Segment.Group>\r\n\r\n                        </Form>\r\n                    }\r\n                </Sidebar>\r\n\r\n                {/* Sidebar.Pusher = Left Column */}\r\n                <Sidebar.Pusher style={{height: '100%'}}>\r\n                    <Map center={position} zoom={this.state.zoom} style={{height: \"100%\"}}>\r\n                        <TileLayer\r\n                            attribution=\"&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        />\r\n                        <Marker position={position}>\r\n                            <Popup>\r\n                                A pretty CSS3 popup. <br/> Easily customizable\r\n                            </Popup>\r\n                        </Marker>\r\n                    </Map>\r\n                </Sidebar.Pusher>\r\n            </Sidebar.Pushable>\r\n        );\r\n    };\r\n\r\n\r\n}\r\n\r\nexport default Search;\r\n\r\n","import React, {Component} from 'react';\r\nimport {\r\n    Container,\r\n    Header,\r\n    Button,\r\n    Divider,\r\n    Grid,\r\n    Image,\r\n    Sidebar,\r\n    Visibility,\r\n    Responsive,\r\n    Segment,\r\n    Menu,\r\n    Icon,\r\n    Input,\r\n    Checkbox,\r\n    Accordion,\r\n    Form,\r\n    Radio,\r\n    Message\r\n} from 'semantic-ui-react'\r\nimport axios from 'axios';\r\n\r\n\r\nclass LogIn extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    onChangeInput = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    onSubmitForm = () => {\r\n        //  todo: login routine, such as:\r\n        /*\r\n        // see documentation: https://github.com/axios/axios#request-config\r\n        axios.post('/user/login', {\r\n            user: this.state.user,\r\n            password: this.state.password\r\n        }).then((response) => {\r\n            // success routine (see below)\r\n\r\n        }).error((error) => {\r\n            // error routine\r\n            this.setState({hasError: true});\r\n        });\r\n        */\r\n        sessionStorage.setItem(\"loggedIn\", \"userObjectFromBackend\");\r\n        //console.log(this.state.user);\r\n        //console.log(this.state.password);\r\n        var referrTo;\r\n        if(this.props.location.state){\r\n            referrTo = this.props.location.state.from;\r\n            this.props.location.state.updateLoginStatus();\r\n        } else {\r\n            referrTo = { pathname: \"/\" };\r\n            this.props.updateLoginStatus();\r\n        }\r\n        this.props.history.push(referrTo);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Grid textAlign='center' style={{height: '100%'}} verticalAlign='middle'>\r\n                <Grid.Column style={{maxWidth: 450}}>\r\n                    <Header as='h2' color='blue' textAlign='center'>\r\n                        Login to your account\r\n                    </Header>\r\n                    {this.state.hasError &&\r\n                        <Message attached error header='Invalid login data!' content='Fehler message bla bla bla ....'/>\r\n                    }\r\n                    {this.props.location.state &&\r\n                        <Message attached warning header='You must login to access this page!' content='Please login first. You will then be redirected.'/>\r\n                    }\r\n                    <Form size='large' onSubmit={this.onSubmitForm} className='attached fluid segment'>\r\n\r\n                            <Form.Input fluid icon='user' name='user' iconPosition='left'\r\n                                        placeholder='E-mail address' onChange={this.onChangeInput} required />\r\n                            <Form.Input fluid icon='lock' name='password' iconPosition='left'\r\n                                        placeholder='Password' onChange={this.onChangeInput}\r\n                                        type='password' required />\r\n                            <Form.Field>\r\n                                <a href='#'>Forgot your password?</a>\r\n                            </Form.Field>\r\n                            <Button color='blue' fluid size='large'>\r\n                                Login\r\n                            </Button>\r\n                    </Form>\r\n                    <Message attached='bottom'>\r\n                        Don't have an account? <a href='#'>Sign Up</a>\r\n                    </Message>\r\n\r\n                </Grid.Column>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default LogIn;","import React, {Component} from 'react';\r\nimport {\r\n    Container,\r\n    Header,\r\n    Button,\r\n    Divider,\r\n    Grid,\r\n    Image,\r\n    Sidebar,\r\n    Visibility,\r\n    Responsive,\r\n    Segment,\r\n    Menu,\r\n    Icon,\r\n    Input,\r\n    Checkbox,\r\n    Accordion,\r\n    Form,\r\n    Radio,\r\n    Message\r\n} from 'semantic-ui-react'\r\nimport {Map, TileLayer, Marker, Popup} from 'react-leaflet';\r\nimport {Slider} from 'react-semantic-ui-range';\r\n\r\n\r\nclass FAQ extends Component {\r\n\r\n\r\n    state = {activeIndex: -1}\r\n\r\n    handleClick = (e, titleProps) => {\r\n        const {index} = titleProps\r\n        const {activeIndex} = this.state\r\n        const newIndex = activeIndex === index ? -1 : index\r\n\r\n        this.setState({activeIndex: newIndex})\r\n    }\r\n\r\n    render() {\r\n        const {activeIndex} = this.state\r\n\r\n        return (\r\n            <Container as={Segment} basic padded>\r\n                <Header as='h2'>FAQ</Header>\r\n                <Accordion block fluid styled data-testid='faqAccordion'>\r\n                    <Accordion.Title active={activeIndex === 0} index={0} onClick={this.handleClick}>\r\n                        Most frequently asked quesion 1\r\n                        <Header as='h5' floated='right'> <Icon name='add'/> </Header>\r\n                    </Accordion.Title>\r\n                    <Accordion.Content active={activeIndex === 0}>\r\n                        <p>\r\n                            Answer to Q1\r\n                        </p>\r\n                    </Accordion.Content>\r\n                    <Accordion.Title active={activeIndex === 1} index={1} onClick={this.handleClick}>\r\n                        Most frequently asked quesion 2\r\n                        <Header as='h5' floated='right'> <Icon name='add'/> </Header>\r\n                    </Accordion.Title>\r\n                    <Accordion.Content active={activeIndex === 1}>\r\n                        <p>\r\n                            Answer to Q2\r\n                        </p>\r\n                    </Accordion.Content>\r\n                    <Accordion.Title active={activeIndex === 2} index={2} onClick={this.handleClick}>\r\n                        Most frequently asked quesion 3\r\n                        <Header as='h5' floated='right'> <Icon name='add'/> </Header>\r\n                    </Accordion.Title>\r\n                    <Accordion.Content active={activeIndex === 2}>\r\n                        <p>\r\n                            Answer to Q3. This is the following: Lorem ipsum dolor sit amet,\r\n                            consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\r\n                            labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\r\n                            laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in\r\n                            voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\r\n                            cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n                        </p>\r\n                    </Accordion.Content>\r\n                    <Accordion.Title active={activeIndex === 3} index={3} onClick={this.handleClick}>\r\n                        Most frequently asked quesion 4\r\n                        <Header as='h5' floated='right'> <Icon name='add'/> </Header>\r\n                    </Accordion.Title>\r\n                    <Accordion.Content active={activeIndex === 3}>\r\n                        <p>\r\n                            Answer to Q4. This is the following: Lorem ipsum dolor sit amet,\r\n                            consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\r\n                            labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\r\n                            laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in\r\n                            voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\r\n                            cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n                        </p>\r\n                    </Accordion.Content>\r\n                    <Accordion.Title active={activeIndex === 4} index={4} onClick={this.handleClick}>\r\n                        Most frequently asked quesion 5\r\n                        <Header as='h5' floated='right'> <Icon name='add'/> </Header>\r\n                    </Accordion.Title>\r\n                    <Accordion.Content active={activeIndex === 4}>\r\n                        <p>\r\n                            Answer to Q5. This is the following: Lorem ipsum dolor sit amet,\r\n                            consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\r\n                            labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\r\n                            laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in\r\n                            voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\r\n                            cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n                        </p>\r\n                    </Accordion.Content>\r\n                    <Accordion.Title active={activeIndex === 5} index={5} onClick={this.handleClick}>\r\n                        Most frequently asked quesion 6\r\n                        <Header as='h5' floated='right'> <Icon name='add'/> </Header>\r\n                    </Accordion.Title>\r\n                    <Accordion.Content active={activeIndex === 5}>\r\n                        <p>\r\n                            Answer to Q6. This is the following: Lorem ipsum dolor sit amet,\r\n                            consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\r\n                            labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\r\n                            laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in\r\n                            voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\r\n                            cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n                        </p>\r\n                    </Accordion.Content>\r\n                </Accordion>\r\n            </Container>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default FAQ;","import React, {Component} from \"react\";\r\nimport {Grid, Header, Image, Icon, Sidebar, Container, Segment} from \"semantic-ui-react\";\r\nimport {Carousel} from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Home extends Component {\r\n\r\n    render() {\r\n        //\r\n        return (\r\n            <Container fluid data-testid='siteHome'>\r\n                <Carousel autoPlay showArrows infiniteLoop useKeyboardArrows showThumbs={false}>\r\n                    <div>\r\n                        <img src='./static/media/RiceTerraces.JPG'/>\r\n                    </div>\r\n                    <div>\r\n                        <img src='./static/media/EndChineseWall.JPG'/>\r\n                        <p className=\"legend\">Legend 2</p>\r\n                    </div>\r\n                    <div>\r\n                        <img src='./static/media/RiceTerraces.JPG'/>\r\n                        <p className=\"legend\">Legend 3</p>\r\n                    </div>\r\n                    <div>\r\n                        <img src='./static/media/EndChineseWall.JPG'/>\r\n                        <p className=\"legend\">Legend 4</p>\r\n                    </div>\r\n\r\n                </Carousel>\r\n                <Container as={Segment} basic padded>Test</Container>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport {\r\n    Container,\r\n    Header,\r\n    Button,\r\n    Divider,\r\n    Grid,\r\n    Image,\r\n    Segment,\r\n    Icon,\r\n    Input,\r\n    Form,\r\n    Item,\r\n    Dropdown,\r\n    Statistic,\r\n    Label, Rating\r\n} from 'semantic-ui-react'\r\nimport {mockData} from '../../mockData'\r\n\r\nclass MyRoutes extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Container as={Segment} basic padded>\r\n                <Header as='h2' dividing>\r\n                    <Icon name='map signs'/>\r\n                    <Header.Content>My Routes\r\n                        <Header.Subheader as='h3'> Routes you have created</Header.Subheader>\r\n                    </Header.Content>\r\n                </Header>\r\n                <Grid columns='equal'>\r\n                    <Grid.Column textAlign='left'>\r\n                        <Icon name='list'/> {mockData.length} results\r\n                    </Grid.Column>\r\n                    <Grid.Column textAlign='right'>\r\n                        <Dropdown text='Sort By' direction='left'>\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item text='Relevance'/>\r\n                                <Dropdown.Item text='Most popular'/>\r\n                                <Dropdown.Item text='Most recently updated'/>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </Grid.Column>\r\n                </Grid>\r\n                <Item.Group divided link>\r\n                    {mockData.map((result) =>\r\n                        <Item>\r\n                            <Item.Image size='small' src={result.image}/>\r\n\r\n                            <Item.Content>\r\n                                <Item.Header as='h4'> {result.title} </Item.Header>\r\n                                <Item.Meta>{result.address}</Item.Meta>\r\n                                <Item.Description>\r\n                                    <div>Distance:{result.distance} km</div>\r\n                                    <div>Difficulty: {result.difficulty}</div>\r\n                                </Item.Description>\r\n                                <Item.Extra>\r\n                                    <Rating icon='star' defaultRating={result.rating} maxRating={5} disabled/>\r\n                                    <Button floated='right' compact content='Delete'/>\r\n                                </Item.Extra>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    )}\r\n                </Item.Group>\r\n            </Container>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyRoutes;","import React, {Component} from 'react';\r\nimport {Container, Header, Button, Divider, Grid, Image, Segment, Icon, Input} from 'semantic-ui-react'\r\nimport {mockData} from '../../mockData';\r\n\r\nclass MyReviews extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Container as={Segment} basic padded>\r\n                <Header as='h2' dividing>\r\n                    <Icon name='globe'/>\r\n                    <Header.Content>My Reviews\r\n                        <Header.Subheader as='h3'> Routes you have reviewed</Header.Subheader>\r\n                    </Header.Content>\r\n                </Header>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyReviews;","import React, {Component} from 'react';\r\nimport {Container, Header, Button, Divider, Grid, Image, Segment, Icon, Input} from 'semantic-ui-react'\r\n\r\nclass Settings extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Container as={Segment} basic padded>\r\n                Test\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Settings;","import React, {Component} from \"react\";\r\nimport Create from \"./sites/Create\";\r\nimport Search from \"./sites/Search\";\r\nimport LogIn from \"./sites/LogIn\";\r\nimport FAQ from \"./sites/FAQ\";\r\nimport Home from \"./sites/Home\";\r\nimport MyRoutes from \"./sites/user/MyRoutes\";\r\nimport MyReviews from \"./sites/user/MyReviews\";\r\nimport Settings from \"./sites/user/Settings\";\r\n\r\nimport {Button, Container, Menu, Grid, Icon, Responsive, Segment, Dropdown, Label, Header} from \"semantic-ui-react\";\r\nimport {Route, HashRouter as Router, NavLink, Redirect} from \"react-router-dom\";\r\n\r\nclass Website extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loggedIn: sessionStorage.getItem(\"loggedIn\")\r\n        }\r\n    };\r\n\r\n    updateLoginStatus = () => {\r\n        this.setState({loggedIn: sessionStorage.getItem(\"loggedIn\")});\r\n    };\r\n\r\n    render() {\r\n        const PrivateRoute = ({component: Component, ...rest}) =>\r\n            <Route {...rest} render={props => (\r\n                sessionStorage.getItem('loggedIn')\r\n                    ? <Component {...props} />\r\n                    : <Redirect to={{\r\n                        pathname: '/login',\r\n                        state: {from: props.location, updateLoginStatus: this.updateLoginStatus}\r\n                    }}/>\r\n            )}/>;\r\n\r\n        // Layout der Seite:\r\n        return (\r\n            <Router>\r\n                <div style={{height: \"100%\"}}>\r\n                    <Menu fixed='top' icon='labeled' style={{marginBottom: \"0\"}}>\r\n                        <Menu.Item name='home' as={NavLink} exact to='/' data-testid='menuItemHome'>\r\n                            <Icon name='home'/>\r\n                            Home\r\n                        </Menu.Item>\r\n                        <Menu.Item name='search' as={NavLink} exact to='/search'>\r\n                            <Icon name='search'/>\r\n                            Search\r\n                        </Menu.Item>\r\n                        <Menu.Item name='create' as={NavLink} exact to='/create'>\r\n                            <Icon name='pencil'/>\r\n                            Create\r\n                        </Menu.Item>\r\n\r\n                        <Header style={{paddingLeft: \"1rem\"}}>\r\n                            <Icon name='tree'/>\r\n                            <Header.Content> Name</Header.Content>\r\n                        </Header>\r\n                        {!this.state.loggedIn ?\r\n                            <Menu.Item position='right' name='user' as={NavLink} exact to='/login'>\r\n                                <Icon name='user'/>\r\n                                LogIn\r\n                            </Menu.Item>\r\n                            :\r\n                            <Dropdown item icon={null} text={<Menu.Item name='user'>\r\n                                <Icon name='user'/>\r\n                                User\r\n                            </Menu.Item>} labeled className='right' style={{padding: 0}}>\r\n\r\n                                <Dropdown.Menu>\r\n                                    <Dropdown.Item icon='map signs' text='My Routes' as={NavLink} exact to='/myroutes'/>\r\n                                    <Dropdown.Item icon='globe' text='My Reviews' as={NavLink} exact to='/myreviews'/>\r\n                                    <Dropdown.Item icon='settings' text='Settings' as={NavLink} exact to='/settings'/>\r\n                                    <Dropdown.Item icon='logout' text='Logout' as={NavLink} exact to='/login'\r\n                                                   onClick={() => {\r\n                                                       sessionStorage.clear();\r\n                                                       this.updateLoginStatus();\r\n                                                   }}/>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        }\r\n                        <Menu.Item name='help' as={NavLink} exact to='/help'>\r\n                            <Icon name='help'/>\r\n                            FAQ\r\n                        </Menu.Item>\r\n                    </Menu>\r\n\r\n                    <Segment vertical className='content' style={{padding: \"5em 0 0 0\"}} data-testid='siteContent'>\r\n                        <Route exact path=\"/\" component={Home}/>\r\n                        <Route path=\"/search\" component={Search}/>\r\n                        <PrivateRoute path=\"/create\" component={Create}/>\r\n                        <Route path=\"/login\"\r\n                               render={props => (<LogIn  {...props} updateLoginStatus={this.updateLoginStatus}/>)}/>\r\n                        <Route path=\"/help\" component={FAQ}/>\r\n\r\n                        <PrivateRoute path=\"/myroutes\" component={MyRoutes}/>\r\n                        <PrivateRoute path=\"/myreviews\" component={MyReviews}/>\r\n                        <PrivateRoute path=\"/settings\" component={Settings}/>\r\n                    </Segment>\r\n                </div>\r\n            </Router>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Website;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Website from './Website';\r\nimport \"react-responsive-carousel/lib/styles/carousel.css\";\r\n\r\nReactDOM.render(<Website />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}